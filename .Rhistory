# this breaks the dependence between C and E
C <- rnorm(300)
E <- rnorm(300)
cor.test(C,E)$p.value
install.packages("xaringanthemer")
library(fontawesome)
library(xaringanthemer)
install.packages("showtext")
install.packages(c("kableExtra", "knitr", "RefManageR", "tidyverse"))
install.packages("fontawesome")
install.packages("Rtools")
devtools::install_github("rstudio/fontawesome")
install.packages("devtools")
library(devtools)
devtools::install_github("rstudio/fontawesome")
library(fontawesome)
library(RefManageR)
library(tidyverse)
library(kableExtra)
library(knitr)
library(distill)
install.packages("distill")
data(Snow.deaths)
install.packages("Snow")
install.packages("Rdatasets")
devtools::install_github('vincentarelbundock/Rdatasets')
install.packages("HistData")
library(HistData)
data(Snow.deaths)
View(Snow.deaths)
data(Snow.pumps)
data(Snow.streets)
data(Snow.polygons)
data(Snow.dates)
force(Snow.dates)
force(Snow.polygons)
force(Snow.pumps)
force(Snow.streets)
############
require(lubridate)
clr <- ifelse(Snow.dates$date < mdy("09/08/1854"), "red", "darkgreen")
plot(deaths ~ date, data=Snow.dates, type="h", lwd=2, col=clr)
points(deaths ~ date, data=Snow.dates, cex=0.5, pch=16, col=clr)
text( mdy("09/08/1854"), 40, "Pump handle\nremoved Sept. 8", pos=4)
SnowMap()
SnowMap(polygons=TRUE, main="Snow's Cholera Map with Pump Polygons")
SnowMap(xlim=c(7.5,16.5), ylim=c(7,16), polygons=TRUE, density=TRUE,
main="Snow's Cholera Map, Annotated")
library(sp)
# streets
slist <- split(Snow.streets[,c("x","y")],as.factor(Snow.streets[,"street"]))
Ll1 <- lapply(slist,Line)
Lsl1 <- Lines(Ll1,"Street")
Snow.streets.sp <- SpatialLines(list(Lsl1))
plot(Snow.streets.sp, col="gray")
title(main="Snow's Cholera Map of London (sp)")
# deaths
Snow.deaths.sp = SpatialPoints(Snow.deaths[,c("x","y")])
plot(Snow.deaths.sp, add=TRUE, col ='red', pch=15, cex=0.6)
# pumps
spp <- SpatialPoints(Snow.pumps[,c("x","y")])
Snow.pumps.sp <- SpatialPointsDataFrame(spp,Snow.pumps[,c("x","y")])
plot(Snow.pumps.sp, add=TRUE, col='blue', pch=17, cex=1.5)
text(Snow.pumps[,c("x","y")], labels=Snow.pumps$label, pos=1, cex=0.8)
install.packages(c("here", "sf", "widgetframe"))
install.packages("broom")
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
install.packages("backports")
library(tidyverse)
library(tidyverse)
#devtools::install_github("walkerke/tidycensus")
library(tidycensus)
state_pop_00 <- get_decennial(year=2000, geography = "state", variables = "P001001")
state_pop_00 <- get_decennial(year=2000, geography = "state", variables = "B01003_001")
state_pop_10 <- get_decennial(year=2010, geography = "state", variables = "P001001")
View(state_pop_10)
state_pop_10 <- get_decennial(year=c(2000,2010), geography = "state", variables = "P001001")
state_pop_00 <- get_decennial(year=2000, geography = "state", variables = "P001001")
state_pop_00 <- get_decennial(year=2000, geography = "state", table = "P1")
state_inc_00 <- get_decennial(year=2000, geography = "state", table = "B19013_001")
state_inc_00 <- get_decennial(year=2000, geography = "state", variables = "B19013_001")
state_pop_00 <- get_decennial(year=2000, geography = "state", variables = "POP")
state_pop_10 <- get_decennial(year=2010, geography = "state", variables = "P001001")
View(state_pop_10)
state_pop_00 <- get_decennial(year=1990, geography = "state", variables = "POP")
state_pop_00 <- get_decennial(year=1990, geography = "state", variables = "P001001")
state_pop_00 <- get_decennial(geography = "state", variables = "P001001", year=1990)
state_pop_00 <- get_decennial(geography = "state", variables = "P001001", year=1990, name="POP")
#census_api_key("d6a26edc2fe0c453ac915bcdb6515edf8b19a592", install =TRUE)
state_rent <- get_decennial(geography = "state", variables = "H043A001", year=1990)
variables<- load_variables(year = 2010, dataset = "acs5")
View(variables)
devtools::install_github("walkerke/tidycensus")
library(tidycensus)
census_api_key("d6a26edc2fe0c453ac915bcdb6515edf8b19a592", install =TRUE)
#census_api_key("d6a26edc2fe0c453ac915bcdb6515edf8b19a592", install =TRUE)
var0<-load_variables(year="2000", "sf3")
View(var0)
state_rent <- get_decennial(geography = "state", variables = "H062001", year=2000, sumfile="sf3")
library(tidycensus)
census_api_key("d6a26edc2fe0c453ac915bcdb6515edf8b19a592", install =TRUE)
census_api_key("d6a26edc2fe0c453ac915bcdb6515edf8b19a592", overwrite=TRUE ,install =TRUE)
library(tidyverse)
library(tidycensus)
library(readstata13)
######################################################
library(tidycensus)
hs_earnings<-get_acs(geography = "metropolitan statistical area/micropolitan statistical area",
variables = "B20004_003",
sumfile="acs5",
year=2018)
pop_share<-get_acs(geography = "metropolitan statistical area/micropolitan statistical area",
variables = c(total="B15003_001",bachelor="B15003_022", prof="B15003_024", master="B15003_023", phd="B15003_025"),
sumfile="acs5",
year=2018,
output="wide")
pop_share<-pop_share%>%mutate(bachelor_share=(bachelorE+masterE+phdE+profE)/totalE)
pop_share<-pop_share%>%select(GEOID, bachelor_share)
bach_earnings<-bach_earnings%>%select(GEOID, bach_earn=estimate)
full_data<-full_join(pop_share, hs_earnings, by="GEOID")
View(full_data)
full_data%>% stringr::str_remove(" Micro Area")
teste<-full_data%>% stringr::str_remove(" Micro Area")
View(teste)
teste<-full_data%>% select(`Metro area`)%>% stringr::str_remove(" Micro Area")
teste<-full_data%>% select(NAME)%>% stringr::str_remove(" Micro Area")
View(teste)
teste<-full_data%>% mutate(Metro=NAME%>%stringr::str_remove(" Micro Area"))
View(teste)
teste<-full_data%>% mutate(Metro=NAME%>%stringr::str_remove_all(" Micro Area"," Metro Area"))
teste<-full_data%>% mutate(Metro=NAME%>%stringr::str_remove_all(" Micro Area"|" Metro Area"))
library(stringr)
teste<-full_data%>% mutate(Metro=NAME%>%str_remove_all(c(" Micro Area"," Metro Area")))
View(teste)
teste<-full_data%>% mutate(Metro=NAME%>%str_remove_all(" Micro Area"))
teste<-full_data%>% mutate(Metro=NAME%>%str_remove_all(" Metro Area"))
View(teste)
teste<-full_data%>% mutate(Metro=NAME%>%str_remove_all(" Micro Area"))
teste<-full_data%>% mutate(Metro=Metro%>%str_remove_all(" Metro Area"))
View(teste)
teste<-full_data%>% mutate(Metro=NAME%>%str_remove_all(" Micro Area"))
View(teste)
teste<-full_data%>% mutate(Metro=Metro%>%str_remove_all(" Metro Area"))
teste<-full_data%>% mutate(Metro=NAME%>%str_remove_all(" Micro Area", " Metro Area"))
teste<-full_data%>% mutate(Metro=NAME%>%str_remove_all(" Micro Area", " Metro Area"))
teste<-full_data%>% mutate(Metro=NAME%>%str_remove_all(" Metro Area"))
teste<-full_data%>% mutate(Metro=NAME%>%str_remove_all(" Metro Area", " Micro Area"))
teste<-full_data%>% mutate(Metro=str_remove_all(NAME," Metro Area", " Micro Area"))
teste<-full_data%>% mutate(Metro=str_remove_all(NAME,c(" Metro Area", " Micro Area")))
teste<-full_data%>% mutate(Metro=str_remove_all(NAME," Metro Area"))
teste<-full_data%>% mutate(Metro=str_remove_all(Metro, " Micro Area"))
teste<-full_data%>% mutate(Metro2=str_remove_all(Metro, " Micro Area"))
teste<-teste%>% mutate(Metro2=str_remove_all(Metro, " Micro Area"))
View(teste)
teste<-teste%>% mutate(Metro=str_remove_all(Metro, " Micro Area"))
View(teste)
teste<-full_data%>% mutate(Metro=str_remove_all(NAME," Metro Area"))
teste<-teste%>% mutate(Metro=str_remove_all(Metro, " Micro Area"))
View(teste)
g1<-ggplot(teste, aes(x=bachelor_share, y=estimate)) + geom_point(color="darkgrey") + geom_text_repel(aes(label=`Metro area`), size=2)+
stat_smooth(method = "lm", formula =y~x, se=F, color="black") +
scale_x_continuous(name = "Share of population with bachelor degree (%)") +
scale_y_continuous(name = "Median earnings - College grad") +
theme_economist_white(base_size = 17, gray_bg=FALSE)+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=12,face="bold"))
library(plotly)
library(ggrepel)
library(ggthemes)
g1<-ggplot(teste, aes(x=bachelor_share, y=estimate)) + geom_point(color="darkgrey") + geom_text_repel(aes(label=`Metro area`), size=2)+
stat_smooth(method = "lm", formula =y~x, se=F, color="black") +
scale_x_continuous(name = "Share of population with bachelor degree (%)") +
scale_y_continuous(name = "Median earnings - College grad") +
theme_economist_white(base_size = 17, gray_bg=FALSE)+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=12,face="bold"))
g1
g1<-ggplot(teste, aes(x=bachelor_share, y=estimate)) + geom_point(color="darkgrey") + geom_text_repel(aes(label=Metro), size=2)+
stat_smooth(method = "lm", formula =y~x, se=F, color="black") +
scale_x_continuous(name = "Share of population with bachelor degree (%)") +
scale_y_continuous(name = "Median earnings - College grad") +
theme_economist_white(base_size = 17, gray_bg=FALSE)+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=12,face="bold"))
g1
g1<-ggplot(teste, aes(x=bachelor_share, y=estimate)) + geom_point(color="darkgrey") +
stat_smooth(method = "lm", formula =y~x, se=F, color="black") +
scale_x_continuous(name = "Share of population with bachelor degree (%)") +
scale_y_continuous(name = "Median earnings - College grad") +
theme_economist_white(base_size = 17, gray_bg=FALSE)+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=12,face="bold"))
g1
var2010_2<-load_variables(year=2018, "acs5")
View(var2010_2)
######################################################
library(tidycensus)
pop_share<-get_acs(geography = "metropolitan statistical area/micropolitan statistical area",
variables = c(total="B15003_001",bachelor="B15003_022", prof="B15003_024", master="B15003_023", phd="B15003_025"),
sumfile="acs5",
year=2018,
output="wide")
var2010_2<-load_variables(year=2018, "acs5")
View(var2010_2)
View(var2010_2)
######################################################
library(tidycensus)
bach_earnings<-get_acs(geography = "metropolitan statistical area/micropolitan statistical area",
variables = "B20004_005",
sumfile="acs5",
year=2018)
View(var2010_2)
library(tidyverse)
library(ggthemes)
df<-data.frame(x1=0, x2=150, y1=0, y2=150)
g1<-ggplot()+
geom_point()+
theme_economist_white(gray_bg = F)+
theme(text = element_text(size=15))
g1+   geom_abline(aes(intercept = 100, slope = -1, colour="Developers"), size=1.2)+
geom_segment(aes(x=x1, xend=x2, y=20, yend=20, colour="Famers"),
data=df, size=1.2)+
scale_x_continuous(limits = c(0,150), expand = c(0, 0),
breaks=c(0,50,100,120,140)) +
scale_y_continuous(limits = c(0,130), expand = c(0, 0),
breaks=c(0,20,40,60,80,100,120)) +
xlab("Distance from CBD") +
ylab("Bid rent curve")+
labs(color='')
g1+   geom_abline(aes(intercept = 120, slope = -1, colour="Developers"), size=1.2)+
geom_segment(aes(x=x1, xend=x2, y=40, yend=40, colour="Famers"),
data=df, size=1.2)+
scale_x_continuous(limits = c(0,150), expand = c(0, 0),
breaks=c(0,50,100,120,140)) +
scale_y_continuous(limits = c(0,130), expand = c(0, 0),
breaks=c(0,20,40,60,80,100,120)) +
xlab("Distance from CBD") +
ylab("Bid rent curve")+
labs(color='')
g1+   geom_abline(aes(intercept = 120, slope = -1, colour="Developers"), size=1.2)+
geom_abline(aes(intercept = 80, slope = -1, colour="Developers"), size=1.2)+
geom_segment(aes(x=x1, xend=x2, y=40, yend=40, colour="Famers"),
data=df, size=1.2)+
scale_x_continuous(limits = c(0,150), expand = c(0, 0),
breaks=c(0,50,100,120,140)) +
scale_y_continuous(limits = c(0,130), expand = c(0, 0),
breaks=c(0,20,40,60,80,100,120)) +
xlab("Distance from CBD") +
ylab("Bid rent curve")+
labs(color='')
g1+   geom_abline(aes(intercept = 120, slope = -1, colour="Developers old"), size=1.2)+
geom_abline(aes(intercept = 80, slope = -1, colour="Developers new"), size=1.2)+
geom_segment(aes(x=x1, xend=x2, y=40, yend=40, colour="Famers"),
data=df, size=1.2)+
scale_x_continuous(limits = c(0,150), expand = c(0, 0),
breaks=c(0,50,100,120,140)) +
scale_y_continuous(limits = c(0,130), expand = c(0, 0),
breaks=c(0,20,40,60,80,100,120)) +
xlab("Distance from CBD") +
ylab("Bid rent curve")+
labs(color='')
g1+  geom_abline(aes(intercept = 80, slope = -1, colour="Developers new"), size=1.2)+
geom_abline(aes(intercept = 120, slope = -1, colour="Developers old"), size=1.2)+
geom_segment(aes(x=x1, xend=x2, y=40, yend=40, colour="Famers"),
data=df, size=1.2)+
scale_x_continuous(limits = c(0,150), expand = c(0, 0),
breaks=c(0,50,100,120,140)) +
scale_y_continuous(limits = c(0,130), expand = c(0, 0),
breaks=c(0,20,40,60,80,100,120)) +
xlab("Distance from CBD") +
ylab("Bid rent curve")+
labs(color='')
g1+  geom_abline(aes(intercept = 120, slope = -1, colour="Developers old"), size=1.2)+
geom_abline(aes(intercept = 90, slope = -1, colour="Developers new"), size=1.2)+
geom_segment(aes(x=x1, xend=x2, y=40, yend=40, colour="Famers"),
data=df, size=1.2)+
scale_x_continuous(limits = c(0,150), expand = c(0, 0),
breaks=c(0,50,100,120,140)) +
scale_y_continuous(limits = c(0,130), expand = c(0, 0),
breaks=c(0,20,40,60,80,100,120)) +
xlab("Distance from CBD") +
ylab("Bid rent curve")+
labs(color='')
g1+ geom_abline(aes(intercept = 90, slope = -2, colour="Developers old"), size=1.2)+
geom_segment(aes(x=x1, xend=x2, y=40, yend=40, colour="Famers"),
data=df, size=1.2)+
geom_abline(aes(intercept = 110, slope = -2, colour="Developers new"), size=1.2)+
geom_vline(aes(xintercept=65), size=1.2)+
scale_x_continuous(limits = c(0,150), expand = c(0, 0),
breaks=c(0,50,65,100,120,140)) +
scale_y_continuous(limits = c(0,130), expand = c(0, 0), breaks=c(0,20,40,60,80,100,110,120,130)) +
xlab("Distance from CBD") +
ylab("Bid rent curve")+
labs(color='')
g1+ geom_abline(aes(intercept = 90, slope = -1, colour="Developers old"), size=1.2)+
geom_segment(aes(x=x1, xend=x2, y=40, yend=40, colour="Famers"),
data=df, size=1.2)+
geom_abline(aes(intercept = 110, slope = -1, colour="Developers new"), size=1.2)+
geom_vline(aes(xintercept=65), size=1.2)+
scale_x_continuous(limits = c(0,150), expand = c(0, 0),
breaks=c(0,50,65,100,120,140)) +
scale_y_continuous(limits = c(0,130), expand = c(0, 0), breaks=c(0,20,40,60,80,100,110,120,130)) +
xlab("Distance from CBD") +
ylab("Bid rent curve")+
labs(color='')
g1+ geom_abline(aes(intercept = 90, slope = -1, colour="Developers old"), size=1.2)+
geom_segment(aes(x=x1, xend=x2, y=10, yend=10, colour="Famers"),
data=df, size=1.2)+
geom_abline(aes(intercept = 110, slope = -1, colour="Developers new"), size=1.2)+
geom_vline(aes(xintercept=65), size=1.2)+
scale_x_continuous(limits = c(0,150), expand = c(0, 0),
breaks=c(0,50,65,100,120,140)) +
scale_y_continuous(limits = c(0,130), expand = c(0, 0), breaks=c(0,20,40,60,80,100,110,120,130)) +
xlab("Distance from CBD") +
ylab("Bid rent curve")+
labs(color='')
g1+ geom_abline(aes(intercept = 90, slope = -1, colour="Developers old"), size=1.2)+
geom_segment(aes(x=x1, xend=x2, y=10, yend=10, colour="Famers"),
data=df, size=1.2)+
geom_abline(aes(intercept = 110, slope = -1, colour="Developers new"), size=1.2)+
geom_vline(aes(xintercept=65), size=1.2)+
scale_x_continuous(limits = c(0,120), expand = c(0, 0),
breaks=c(0,50,65,100,120)) +
scale_y_continuous(limits = c(0,110), expand = c(0, 0), breaks=c(0,20,40,60,80,100,110)) +
xlab("Distance from CBD") +
ylab("Bid rent curve")+
labs(color='')
g1+ geom_abline(aes(intercept = 90, slope = -1, colour="Developers old"), size=1.2)+
geom_segment(aes(x=x1, xend=x2, y=10, yend=10, colour="Famers"),
data=df, size=1.2)+
geom_abline(aes(intercept = 110, slope = -1, colour="Developers new"), size=1.2)+
geom_vline(aes(xintercept=65), size=1.2)+
scale_x_continuous(limits = c(0,120), expand = c(0, 0),
breaks=c(0,50,65,100,120)) +
scale_y_continuous(limits = c(0,130), expand = c(0, 0), breaks=c(0,20,40,60,80,100,110)) +
xlab("Distance from CBD") +
ylab("Bid rent curve")+
labs(color='')
g1+ geom_abline(aes(intercept = 90, slope = -1, colour="Developers old"), size=1.2)+
geom_segment(aes(x=x1, xend=x2, y=10, yend=10, colour="Famers"),
data=df, size=1.2)+
geom_abline(aes(intercept = 110, slope = -1, colour="Developers new"), size=1.2)+
geom_vline(aes(xintercept=65), size=1.2)+
scale_x_continuous(limits = c(0,120), expand = c(0, 0),
breaks=c(0,50,65,100,120)) +
scale_y_continuous(limits = c(0,130), expand = c(0, 0), breaks=c(0,10,20,40,60,80,100,110)) +
xlab("Distance from CBD") +
ylab("Bid rent curve")+
labs(color='')
g1+ geom_abline(aes(intercept = 90, slope = -1, colour="Developers old"), size=1.2)+
geom_segment(aes(x=x1, xend=x2, y=40, yend=40, colour="Famers"),
data=df, size=1.2)+
geom_abline(aes(intercept = 110, slope = -1, colour="Developers new"), size=1.2)+
geom_vline(aes(xintercept=65), size=1.2)+
scale_x_continuous(limits = c(0,150), expand = c(0, 0),
breaks=c(0,50,65,100,120,140)) +
scale_y_continuous(limits = c(0,130), expand = c(0, 0), breaks=c(0,20,40,60,80,100,110,120,130)) +
xlab("Distance from CBD") +
ylab("Bid rent curve")+
labs(color='')
g1+ geom_abline(aes(intercept = 90, slope = -1, colour="Developers old"), size=1.2)+
geom_segment(aes(x=x1, xend=x2, y=10, yend=10, colour="Famers"),
data=df, size=1.2)+
geom_abline(aes(intercept = 110, slope = -1, colour="Developers new"), size=1.2)+
geom_vline(aes(xintercept=65), size=1.2)+
scale_x_continuous(limits = c(0,150), expand = c(0, 0),
breaks=c(0,50,65,100,120,140)) +
scale_y_continuous(limits = c(0,130), expand = c(0, 0), breaks=c(0,20,40,60,80,100,110,120,130)) +
xlab("Distance from CBD") +
ylab("Bid rent curve")+
labs(color='')
g1+ geom_abline(aes(intercept = 90, slope = -1, colour="Developers old"), size=1.2)+
geom_segment(aes(x=x1, xend=x2, y=10, yend=10, colour="Famers"),
data=df, size=1.2)+
geom_abline(aes(intercept = 110, slope = -1, colour="Developers new"), size=1.2)+
geom_vline(aes(xintercept=65), size=1.2)+
scale_x_continuous(limits = c(0,150), expand = c(0, 0),
breaks=c(0,50,65,100,120,140)) +
scale_y_continuous(limits = c(0,130), expand = c(0, 0), breaks=c(0,20,40,60,80,100,110,120)) +
xlab("Distance from CBD") +
ylab("Bid rent curve")+
labs(color='')
g1+ geom_abline(aes(intercept = 90, slope = -1, colour="Developers old"), size=1.2)+
geom_segment(aes(x=x1, xend=x2, y=10, yend=10, colour="Famers"),
data=df, size=1.2)+
geom_abline(aes(intercept = 110, slope = -1, colour="Developers new"), size=1.2)+
geom_vline(aes(xintercept=65), size=1.2)+
scale_x_continuous(limits = c(0,150), expand = c(0, 0),
breaks=c(0,50,65,100,120,140)) +
scale_y_continuous(limits = c(0,120), expand = c(0, 0), breaks=c(0,20,40,60,80,100,110,120)) +
xlab("Distance from CBD") +
ylab("Bid rent curve")+
labs(color='')
g1+ geom_abline(aes(intercept = 90, slope = -1, colour="Developers old"), size=1.2)+
geom_segment(aes(x=x1, xend=x2, y=10, yend=10, colour="Famers"),
data=df, size=1.2)+
geom_abline(aes(intercept = 110, slope = -1, colour="Developers new"), size=1.2)+
geom_vline(aes(xintercept=65), size=1.2)+
scale_x_continuous(limits = c(0,150), expand = c(0, 0),
breaks=c(0,50,65,100,120,140)) +
scale_y_continuous(limits = c(0,120), expand = c(0, 0), breaks=c(0,20,40,60,80,90,110,120)) +
xlab("Distance from CBD") +
ylab("Bid rent curve")+
labs(color='')
g1+ geom_abline(aes(intercept = 90, slope = -1, colour="Developers old"), size=1.2)+
geom_segment(aes(x=x1, xend=x2, y=10, yend=10, colour="Famers"),
data=df, size=1.2)+
geom_abline(aes(intercept = 110, slope = -1, colour="Developers new"), size=1.2)+
geom_vline(aes(xintercept=50), size=1.2)+
scale_x_continuous(limits = c(0,150), expand = c(0, 0),
breaks=c(0,50,65,100,120,140)) +
scale_y_continuous(limits = c(0,120), expand = c(0, 0), breaks=c(0,20,40,60,80,90,110,120)) +
xlab("Distance from CBD") +
ylab("Bid rent curve")+
labs(color='')
x=25000*150000
y=25000*5*50000
x+y
(x+y)*5/100
x=25000*150000
y=25000*5*50000
x+y
x
y
5/3*x
(x+y)*5/100
integ<-function(t){3t^2+3}
integ<-function(t){3t^2+3}
integ<-function(t) {3*t^2+3}
MC<-function(t) {3*t^2+3}
integrate(MC, lower=.5, upper=1)
D<-function(t){5-t}
integrate(D, lower=1,upper=2)
Teq<-.5*3+integrate(MC, lower=.5, upper=1)+integrate(D, lower=1,upper=2)
Teq<-integrate(MC, lower=.5, upper=1)+integrate(D, lower=1,upper=2)
Teq<-integrate(MC, lower=.5, upper=1)
Deq<-integrate(D, lower=1,upper=2)
Dop<-integrate(D, lower=2/3, upper=2)
Teq+Deq
Teq
Teq[1]
Teq[1]+Deq[2]
Teq[1,1]+Deq[1,1]
Teq[1]+Deq[1]
Teq[1]+
Deq[1]
Teq[1]
Deq[1]
Teq$value
Teq$value+Deq$value
Top$value+Dop$value
Top<-integrate(MC, lower=.5, upper=2/3)
Top$value+Dop$value
Teq$value+Deq$value
Top$value+Dop$value
################
Dtbar<-integrate(D, lower=1/2, upper=2)
(.5*3+Teq$value+Deq$value)*10^5
(.5*3+Top$value+Dop$value)*10^5
################
Dtbar<-integrate(D, lower=1/2, upper=2)
(.5*3+Dtbar)*10^5
(.5*3+Dtbar$value)*10^5
3*t^2+3=5-t
xaringan:::inf_mr()
library(tidyverse)
library(tidycensus)
library(readstata13)
library(ggthemes)
library(plotly)
library(tmap)
workers_time<-get_acs(geography = "county",
variables = c(average_time="DP03_0025"),
year=2018,
geometry = T,
shift_geo = TRUE,
output="wide")
tm_shape(workers_time)+tm_borders(lwd = 2, col = "white", alpha = .4)+
tm_polygons("average_timeE", style="quantile", alpha=0.7,palette = "-viridis", title="Poverty in Chicago Communities")+
tm_legend(legend.title.size = 1.7,legend.text.size = 1, legend.position = c("left", "bottom"))
require(tidycensus)
census_api_key("45d2ea0a39e66f3adbedeefaa5e87fcd4e389e3b")
age10 <- get_decennial(geography = "state",
variables = "P013001",
year = 2010)
get_acs(geography = "metropolitan statistical area/micropolitan statistical area",
variables = c(mhv="B25077_001"),
sumfile="acs5",
year=2018, output = "wide")
census_api_key("d6a26edc2fe0c453ac915bcdb6515edf8b19a592")
age10 <- get_decennial(geography = "state",
variables = "P013001",
year = 2010)
head(age10)
library(tidycensus)
library(tidyverse)
age10 <- get_decennial(geography = "state",
variables = "P013001",
year = 2000)
head(age10)
age10 <- get_decennial(geography = "state",
variables = "P013001",
year = 1990)
xaringan:::inf_mr()
setwd("C:/Users/User/Destkop/Urban Project")
setwd("C:/Users/User/Destkop")
library(blogdown)
#blogdown::install_hugo()
setwd("C:/Users/User/Desktop/leruaite")
blogdown::serve_site()
